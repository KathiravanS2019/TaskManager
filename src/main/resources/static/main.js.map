{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/addproject/addproject.component.css","webpack:///./src/app/addproject/addproject.component.html","webpack:///./src/app/addproject/addproject.component.ts","webpack:///./src/app/addtask/addtask.component.css","webpack:///./src/app/addtask/addtask.component.html","webpack:///./src/app/addtask/addtask.component.ts","webpack:///./src/app/adduser/adduser.component.css","webpack:///./src/app/adduser/adduser.component.html","webpack:///./src/app/adduser/adduser.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/edittask/edittask.component.css","webpack:///./src/app/edittask/edittask.component.html","webpack:///./src/app/edittask/edittask.component.ts","webpack:///./src/app/tm/tm.component.css","webpack:///./src/app/tm/tm.component.html","webpack:///./src/app/tm/tm.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZHByb2plY3QvYWRkcHJvamVjdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<h2>Task Manager</h2>\\n\\t<ul class=\\\"nav nav-tabs\\\">\\n\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link active\\\" href=\\\"#addProject\\\">Add Project</a></li>\\n\\t\\t<li class=\\\"nav-item\\\"><a [routerLink]=\\\"['/addTask']\\\">Add Task</a></li>\\n\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/addUser']\\\">Add User</a></li>\\n\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/tasks']\\\">View Task</a></li>\\n\\t</ul>\\n\\n\\t<div class=\\\"row\\\">\\n\\t\\t<form #addProjectForm=\\\"ngForm\\\">\\n\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t<label for=\\\"project\\\" class=\\\"col-sm-2 col-form-label\\\">Project:</label>\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"project\\\" [(ngModel)]=\\\"project.project\\\" name=\\\"projectName\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t<label for=\\\"startDate\\\" class=\\\"col-sm-2 col-form-label\\\">Start Date:</label>\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"startDate\\\" [(ngModel)]=\\\"project.startDate\\\" name=\\\"startDate\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t<label for=\\\"endDate\\\" class=\\\"col-sm-2 col-form-label\\\">End Date:</label>\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"endDate\\\" [(ngModel)]=\\\"project.endDate\\\" name=\\\"endDate\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\n\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t<label for=\\\"priority\\\" class=\\\"col-sm-2 col-form-label\\\">Priority:</label>\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"range\\\" class=\\\"form-control\\\" id=\\\"priority\\\" name=\\\"priority\\\" [(ngModel)]=\\\"project.priority\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t<label for=\\\"project\\\" class=\\\"col-sm-2 col-form-label\\\">Manager:</label>\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\"selectedUser\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"searchUser()\\\">Search</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"saveProject()\\\">Add</button>\\n\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"resetProject(addProjectForm)\\\">Reset</button>\\n\\t\\t</form>\\n\\t\\t<br />\\n\\t\\t<hr />\\n\\t\\t<section>\\n\\t\\t\\t<div class=\\\"form-horizontal\\\">\\n\\t\\t\\t\\t<div class=\\\"row form-group\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col col-sm-10\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\"searchValue\\\" [(ngModel)]=\\\"searchText\\\" name=\\\"projectSearch\\\" id=\\\"projectSearch\\\" />\\n\\t\\t\\t\\t\\t\\t Sort By:\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"button\\\" class=\\\"btn btn-primary\\\" value=\\\"Start Date\\\" (click)=\\\"sort('startDate','date')\\\" />\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"button\\\" class=\\\"btn btn-primary\\\" value=\\\"End Date\\\" (click)=\\\"sort('endDate','date')\\\" />\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"button\\\" class=\\\"btn btn-primary\\\" value=\\\"Priority\\\" (click)=\\\"sort('priority','number')\\\" />\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"button\\\" class=\\\"btn btn-primary\\\" value=\\\"Complete\\\" (click)=\\\"sort('priority','number')\\\" />\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</section>\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div *ngFor=\\\"let project of projects\\\">\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=row>Project: {{project.project}}</div>\\n\\t\\t\\t\\t\\t<div class=row>\\n\\t\\t\\t\\t\\t\\tNo of Tasks: {{getTaskNumber(project.projectId)}} \\n\\t\\t\\t\\t\\t\\tCompleted: {{getCompleted(project.startDate, project.endDate)}}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=row>\\n\\t\\t\\t\\t\\t\\tStart Date: {{getDate(project.startDate)}} \\n\\t\\t\\t\\t\\t\\tEnd Date: {{getDate(project.endDate)}}</div>\\n\\t\\t\\t\\t\\t<div>Priority: {{project.priority}}</div>\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/editProject',project.projectId]\\\">Update</button>\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-secondary\\\" (click)=\\\"suspendProject(project.projectId)\\\">Suspend</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n<script type=\\\"text/javascript\\\">\\n\\t$(document).ready(function() {\\n\\t\\t$(\\\".nav-tabs a\\\").click(function() {\\n\\t\\t\\t$(this).tab('show');\\n\\t\\t});\\n\\t});\\n</script>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n\tselector: 'app-addproject',\n\ttemplateUrl: './addproject.component.html',\n\tstyleUrls: ['./addproject.component.css']\n})\nexport class AddprojectComponent implements OnInit {\n\tprojects: any;\n\tproject = {};\n\tconstructor(private http:HttpClient , private router :Router) { }\n\tngOnInit() {\n\t\tthis.http.get('/projectsList').subscribe(data => {\n  \t\tthis.projects = data;\n\t\t});\n\t}\n\n\tsaveProject(){\n\t\tthis.http.post('/saveProject',this.project).subscribe(res => {\n\t\t\tthis.router.navigate(['/addProject',res]);\n\t\t\tthis.project = {};\n\t\t},(err) => {\n\t\t\tconsole.log(err);\n\t\t}\n\t\t);\n\t}\n\tresetProjectForm(addProjectForm:NgForm){\n\t\taddProjectForm.resetForm();\n\t}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZHRhc2svYWRkdGFzay5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<h2>Task Manager</h2>\\n\\t<ul class=\\\"nav nav-tabs\\\">\\n\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/addProject']\\\">Add Project</a></li>\\n\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link active\\\" href=\\\"#addtask\\\">Add Task</a></li>\\n\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/addUser']\\\">Add User</a></li>\\n\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/tasks']\\\">View Task</a></li>\\n\\t</ul>\\n\\n\\t<div class=\\\"row\\\">\\n\\t\\t<form #addTaskForm=\\\"ngForm\\\">\\n\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t<label for=\\\"task\\\" class=\\\"col-sm-2 col-form-label\\\">Task:</label>\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"task\\\" [(ngModel)]=\\\"task.task\\\" name=\\\"taskName\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t<label for=\\\"priority\\\" class=\\\"col-sm-2 col-form-label\\\">Priority:</label>\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"range\\\" class=\\\"custom-range\\\" id=\\\"priority\\\" name=\\\"priority\\\" [(ngModel)]=\\\"task.priority\\\" name=\\\"priority\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t<label for=\\\"parentTask\\\" class=\\\"col-sm-2 col-form-label\\\">Parent\\n\\t\\t\\t\\t\\tTask:</label>\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"parentTask\\\"\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"task.parentTask\\\" name=\\\"parentTask\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t<label for=\\\"startDate\\\" class=\\\"col-sm-2 col-form-label\\\">Start\\n\\t\\t\\t\\t\\tDate:</label>\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"startDate\\\"\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"task.startDate\\\" name=\\\"startDate\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t<label for=\\\"endDate\\\" class=\\\"col-sm-2 col-form-label\\\">End\\n\\t\\t\\t\\t\\tDate:</label>\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"endDate\\\"\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"task.endDate\\\" name=\\\"endDate\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"saveTask()\\\">Add\\n\\t\\t\\t\\tTask</button>\\n\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\"\\n\\t\\t\\t\\t(click)=\\\"resetTask(addTaskForm)\\\">Reset</button>\\n\\t\\t</form>\\n\\t</div>\\n</div>\\n<script type=\\\"text/javascript\\\">\\n\\t$(document).ready(function() {\\n\\t\\t$(\\\".nav-tabs a\\\").click(function() {\\n\\t\\t\\t$(this).tab('show');\\n\\t\\t});\\n\\t});\\n</script>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-addtask',\n  templateUrl: './addtask.component.html',\n  styleUrls: ['./addtask.component.css']\n})\nexport class AddtaskComponent implements OnInit {\n\t\n\ttask = {};\n\n  constructor(private http:HttpClient , private router :Router) { }\n\n  ngOnInit() {\n  }\n  \n  saveTask(){\n\t  this.http.post('/saveTask',this.task).subscribe(res => {\n\t\t  this.router.navigate(['/addUser',res]);\n\t\t  this.task = {};\n\t\t  \n\t  },(err) => {\n\t\t  console.log(err);\n\t  }\n\t  );\n   }\n   \n   resetTaskForm(addTaskForm:NgForm){\n\t   addTaskForm.resetForm();\n\t   }\n   \n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZHVzZXIvYWRkdXNlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<h2>Add User</h2>\\n\\t<ul class=\\\"nav nav-tabs\\\">\\n\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\"\\n\\t\\t\\t[routerLink]=\\\"['/addProject']\\\">Add Project</a></li>\\n\\t\\t<li class=\\\"nav-item\\\"><a [routerLink]=\\\"['/addTask']\\\">Add Task</a></li>\\n\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link active\\\" href=\\\"#addUser\\\">Add\\n\\t\\t\\t\\tUser</a></li>\\n\\t\\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\"\\n\\t\\t\\t[routerLink]=\\\"['/tasks']\\\">View Task</a></li>\\n\\t</ul>\\n\\n\\t<div class=\\\"row\\\">\\n\\t\\t<form #addUserForm=\\\"ngForm\\\">\\n\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t<label for=\\\"firstName\\\" class=\\\"col-sm-2 col-form-label\\\">First Name:</label>\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" [(ngModel)]=\\\"user.firstName\\\" name=\\\"firstName\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t<label for=\\\"lastName\\\" class=\\\"col-sm-2 col-form-label\\\">Last Name:</label>\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" [(ngModel)]=\\\"user.lastName\\\" name=\\\"lastName\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t<label for=\\\"employeeID\\\" class=\\\"col-sm-2 col-form-label\\\">Employee ID:</label>\\n\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"employeeID\\\" [(ngModel)]=\\\"user.employeeID\\\" name=\\\"employeeID\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"saveUser()\\\">Add</button>\\n\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"resetUser(addUserForm)\\\">Reset</button>\\n\\t\\t</form>\\n\\t\\t<br />\\n\\t\\t<hr />\\n\\t\\t<section>\\n\\t\\t\\t<div class=\\\"form-horizontal\\\">\\n\\t\\t\\t\\t<div class=\\\"row form-group\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col col-sm-10\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" name=\\\"firstName1\\\" size=\\\"45\\\">&nbsp;\\n\\t\\t\\t\\t\\t\\t Sord By:\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"button\\\" class=\\\"btn btn-primary\\\" value=\\\"First Name\\\" (click)=\\\"sortBy('firstName')\\\" />\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"button\\\" class=\\\"btn btn-primary\\\" value=\\\"Last Name\\\" (click)=\\\"sortBy('lastName')\\\" />\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"button\\\" class=\\\"btn btn-primary\\\" value=\\\"Employee ID\\\" (click)=\\\"sortBy('employeeId')\\\" />\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</section>\\n\\t\\t<form #userManager=\\\"ngForm\\\">\\n\\t\\t<table class=\\\"table\\\">\\n\\t\\t\\t<thead>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<th>First Name</th>\\n\\t\\t\\t\\t\\t<th>Last Name</th>\\n\\t\\t\\t\\t\\t<th>Employee ID</th>\\n\\t\\t\\t\\t\\t<th>Action</th>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</thead>\\n\\t\\t\\t<tbody>\\n\\t\\t\\t\\t<tr *ngFor=\\\"let user of users\\\">\\n\\t\\t\\t\\t\\t<td>{{user.firstName}}</td>\\n\\t\\t\\t\\t\\t<td>{{user.lastName}}</td>\\n\\t\\t\\t\\t\\t<td>{{user.employeeID}}</td>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/editUser',user.id]\\\" class=\\\"btn btn-success\\\">Edit</a>\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-success\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"deleteUser(user.id)\\\">End Task</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</tbody>\\n\\t\\t</table>\\n\\t</form>\\n\\t\\t\\n\\t</div>\\n</div>\\n<script type=\\\"text/javascript\\\">\\n\\t$(document).ready(function() {\\n\\t\\t$(\\\".nav-tabs a\\\").click(function() {\\n\\t\\t\\t$(this).tab('show');\\n\\t\\t});\\n\\t});\\n</script>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-adduser',\n  templateUrl: './adduser.component.html',\n  styleUrls: ['./adduser.component.css']\n})\nexport class AdduserComponent implements OnInit {\n  users: any;\n  user = {};\n\n  constructor(private http:HttpClient , private router :Router) { }\n\n  ngOnInit() {\n  \tthis.http.get('/usersList').subscribe(data => {\n  \t\tthis.users = data;\n  \t});\n  }\n  \n  saveUser(){\n\t  this.http.post('/saveUser',this.user).subscribe(res => {\n\t\t  this.router.navigate(['/addUser',res]);\n\t\t  this.user = {};\n\t\t  \n\t  },(err) => {\n\t\t  console.log(err);\n\t  }\n\t  );\n   }\n   \n   \n   resetUserForm(addUserForm:NgForm){\n\t   addUserForm.resetForm();\n\t   }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- <div class=\\\"container-fluid\\\">\\r\\n\\t<div class=\\\"page-header\\\">\\r\\n\\t\\t<h2>\\r\\n\\t\\t\\t<b>{{title}}</b>\\r\\n\\t\\t</h2>\\r\\n\\t</div>\\r\\n</div>\\r\\n<nav class=\\\"navbar navbar-inverse\\\">\\r\\n\\t<div class=\\\"container-fluid\\\">\\r\\n\\t\\t<ul class=\\\"nav navbar-nav\\\">\\r\\n\\t\\t\\t<li><a routerLink=\\\"/addProject\\\">Add Project</a></li>\\r\\n\\t\\t\\t<li><a routerLink=\\\"/addTask\\\">Add Task</a></li>\\r\\n\\t\\t\\t<li><a routerLink=\\\"/addUser\\\">Add User</a></li>\\r\\n\\t\\t\\t<li><a routerLink=\\\"/viewTask\\\">View Task</a></li>\\r\\n\\t\\t</ul>\\r\\n\\t</div>\\r\\n</nav> -->\\r\\n<div class=\\\"container\\\">\\r\\n\\t<section>\\r\\n\\t\\t<router-outlet></router-outlet>\\r\\n\\t</section>\\r\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes,Router} from '@angular/router'\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TmComponent } from './tm/tm.component';\n\nimport { AddtaskComponent } from './addtask/addtask.component';\nimport { EdittaskComponent } from './edittask/edittask.component';\nimport { DatePipe } from '@angular/common';\n\nimport { AdduserComponent } from './adduser/adduser.component';\nimport { AddprojectComponent } from './addproject/addproject.component';\n\nconst appRoutes: Routes = [\n{ \n   path:'tasks',\n   component: TmComponent,\n   data: { title: 'Add Task'}\n},\n{\n\tpath: 'addTask',\n\tcomponent: AddtaskComponent,\n\tdata:{ title: 'Add Task'}\n},\n{\n\tpath: 'editTask/:id',\n\tcomponent: EdittaskComponent,\n\tdata:{ title: 'Task Edit'}\n},\n{\n\tpath: 'addUser',\n\tcomponent: AdduserComponent,\n\tdata:{ title: 'Add User'}\n},\n{\n\tpath: 'addProject',\n\tcomponent: AddprojectComponent,\n\tdata:{ title: 'Add Project'}\n},\n{  path:'',\n   redirectTo:'/tasks',\n   pathMatch: 'full'\n}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TmComponent,\n    AddtaskComponent,\n    EdittaskComponent,\n    AdduserComponent,\n    AddprojectComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n\tAppRoutingModule,\n    RouterModule.forRoot(\n    appRoutes,\n    { enableTracing: true }\n    )\n  ],\n  providers: [ DatePipe ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXR0YXNrL2VkaXR0YXNrLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n   <h2>Task Manager</h2>\\n   <ul class=\\\"nav nav-tabs\\\">\\n   \\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link active\\\" href=\\\"#edittask\\\">Edit Task</a></li>\\n   \\t<li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" [routerLink]=\\\"['/tasks']\\\">View Task</a></li>\\n   </ul>\\n   \\n   <div class=\\\"row\\\">\\n\\t\\t\\t<form  #addTaskForm=\\\"ngForm\\\">\\n\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"task\\\" class=\\\"col-sm-2 col-form-label\\\">Task:</label>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"task\\\" [(ngModel)]=\\\"task.task\\\" name=\\\"taskName\\\" >\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"priority\\\" class=\\\"col-sm-2 col-form-label\\\">Priority:</label>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" class=\\\"custom-range\\\" id=\\\"priority\\\"\\n\\t\\t\\t\\t\\t\\t\\tname=\\\"priority\\\" [(ngModel)]=\\\"task.priority\\\" name=\\\"priority\\\">\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"parentTask\\\" class=\\\"col-sm-2 col-form-label\\\">Parent\\n\\t\\t\\t\\t\\t\\tTask:</label>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"parentTask\\\" [(ngModel)]=\\\"task.parentTask\\\" name=\\\"parentTask\\\">\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"form-group row\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"startDate\\\" class=\\\"col-sm-2 col-form-label\\\">Start\\n\\t\\t\\t\\t\\t\\tDate:</label>\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"startDate\\\" [(ngModel)]=\\\"task.startDate\\\" name=\\\"startDate\\\">\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"updateTask(task.id)\\\">Update</button>\\n\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"resetTask()\\\">Cancel</button>\\n\\t\\t\\t</form>\\n\\t</div>\\n</div>\\n<script type=\\\"text/javascript\\\">\\n$(document).ready(function(){\\n\\t$(\\\".nav-tabs a\\\").click(function (){\\n\\t\\t$(this).tab('show');\\n\\t});\\n});\\n</script>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute , Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\n\n\n@Component({\n  selector: 'app-edittask',\n  templateUrl: './edittask.component.html',\n  styleUrls: ['./edittask.component.css']\n})\nexport class EdittaskComponent implements OnInit {\n\t\n\ttask = {};\n\n  constructor(private http:HttpClient , private router :Router , private route: ActivatedRoute ,private datePipe :DatePipe) { }\n\n  ngOnInit() {\n\t    this.getTask(this.route.snapshot.params['id']);\n  }\n  getTask(id){\n\t    this.http.get('/getTaskById/'+id).subscribe(data => {\n\t\t\tthis.task = data;\n\t\t\tthis.updateDateFormat(this.task);\n\t\t});\n  }\n  \n  updateDateFormat(task){\n\t  task.startDate = this.datePipe.transform(task.startDate , \"yyyy-MM-dd\");\n  }\n  \n   updateTask(id){\n\t  this.http.post('/updateTask/'+ id, this.task).subscribe(res => {\n\t\t this.router.navigate(['/tasks',res]);\n\t  },(err) => {\n\t\t  console.log(err);\n\t  }\n\t  );\n   }\n   \n   resetTask(){\n\t    this.getTask(this.route.snapshot.params['id']);\n   }\n\t\t\n  }\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RtL3RtLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\t<h2>Task Manager</h2>\\r\\n\\t<nav class=\\\"navbar navbar-inverse\\\">\\r\\n\\t\\t<div class=\\\"container-fluid\\\">\\r\\n\\t\\t\\t<ul class=\\\"nav navbar-nav\\\">\\r\\n\\t\\t\\t\\t<li><a [routerLink]=\\\"['/addProject']\\\">Add Project</a></li>\\r\\n\\t\\t\\t\\t<li><a [routerLink]=\\\"['/addTask']\\\">Add Task</a></li>\\r\\n\\t\\t\\t\\t<li><a [routerLink]=\\\"['/addUser']\\\">Add User</a></li>\\r\\n\\t\\t\\t\\t<li><a href=\\\"#viewTask\\\">View Task</a></li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n\\t</nav>\\r\\n\\t<form #searchForm=\\\"ngForm\\\">\\r\\n\\t\\t<table class=\\\"table\\\">\\r\\n\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<td><label for=\\\"task\\\">Task: </label>&nbsp; <input type=\\\"text\\\"\\r\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"searchTask.task\\\" name=\\\"taskName\\\" size=\\\"45\\\">&nbsp;\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t<td><label for=\\\"parentTask\\\">Parent Task: </label>&nbsp; <input\\r\\n\\t\\t\\t\\t\\t\\ttype=\\\"text\\\" [(ngModel)]=\\\"searchTask.parentTask\\\" name=\\\"parentTask\\\"\\r\\n\\t\\t\\t\\t\\t\\tsize=\\\"45\\\">&nbsp;</td>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<td><label for=\\\"priorityFrom\\\">Priority From : </label>&nbsp; <input\\r\\n\\t\\t\\t\\t\\t\\ttype=\\\"text\\\" [(ngModel)]=\\\"searchTask.priorityFrom\\\"\\r\\n\\t\\t\\t\\t\\t\\tname=\\\"priorityFrom\\\" size=\\\"10\\\">&nbsp; <label\\r\\n\\t\\t\\t\\t\\t\\tfor=\\\"priorityTo\\\">Priority To:</label>&nbsp; <input type=\\\"text\\\"\\r\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"searchTask.priorityTo\\\" name=\\\"priorityTo\\\" size=\\\"10\\\">&nbsp;\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t<td><label for=\\\"startDate\\\">Start Date</label>&nbsp; <input\\r\\n\\t\\t\\t\\t\\t\\ttype=\\\"date\\\" [(ngModel)]=\\\"searchTask.startDate\\\" name=\\\"startDate\\\" />&nbsp;\\r\\n\\t\\t\\t\\t\\t\\t<label for=\\\"endDate\\\">End Date:</label>&nbsp; <input type=\\\"date\\\"\\r\\n\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"searchTask.endDate\\\" name=\\\"endDate\\\"></td>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t<div>\\r\\n\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-success\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t(click)=\\\"searchTaskDetails()\\\">Search</button>\\r\\n\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-success\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t(click)=\\\"clearSearchTaskDetails()\\\">Clear</button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t</tr>\\r\\n\\r\\n\\r\\n\\t\\t</table>\\r\\n\\t</form>\\r\\n\\t<form #taskManager=\\\"ngForm\\\">\\r\\n\\t\\t<table class=\\\"table\\\">\\r\\n\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\r\\n\\t\\t\\t\\t\\t<th>Task</th>\\r\\n\\t\\t\\t\\t\\t<th>Parent Task</th>\\r\\n\\t\\t\\t\\t\\t<th>Priority</th>\\r\\n\\t\\t\\t\\t\\t<th>Start Date</th>\\r\\n\\t\\t\\t\\t\\t<th>End Date</th>\\r\\n\\t\\t\\t\\t\\t<th>Action</th>\\r\\n\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</thead>\\r\\n\\t\\t\\t<tbody>\\r\\n\\r\\n\\t\\t\\t\\t<tr *ngFor=\\\"let task of tasks\\\">\\r\\n\\t\\t\\t\\t\\t<td>{{task.task}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{task.parentTask}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{task.priority}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{task.startDate | date: 'yyyy-MM-dd'}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{task.endDate | date : 'yyyy-MM-dd'}}</td>\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"task.endDate == null\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/editTask',task.id]\\\" class=\\\"btn btn-success\\\">Edit</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-success\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"endTask(task.id)\\\">End Task</button>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</tbody>\\r\\n\\t\\t</table>\\r\\n\\t</form>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-tm',\n  templateUrl: './tm.component.html',\n  styleUrls: ['./tm.component.css']\n})\nexport class TmComponent implements OnInit {\n\n  tasks: any;\n  searchTask = {};\n  constructor (private http: HttpClient, private router:Router) { }\n\n  ngOnInit() {\n  \tthis.http.get('/tasksList').subscribe(data => {\n  \t\tthis.tasks = data;\n  \t});\n  }\n  \n  endTask(id){\n\t  this.http.get('/endTask/'+id).subscribe(res => {\n\t\t  this.tasks = res ;\n\t\t  \n\t  });\n  }\n  \n  searchTaskDetails(){\n\t   this.http.post('/searchTask', this.searchTask).subscribe(res => {\n\t\t  this.tasks = res ;\n\t\t  \n\t  });\n  }\n  clearSearchTaskDetails(){\n\t  this.searchTask = {};\n\t  this.http.get('/tasksList').subscribe(data => {\n  \t\tthis.tasks = data;\n  \t});\n  }\n  \n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}